version: '3'
services:

  #Laravel App
  app:
    build:
      context: ./php-fpm
      dockerfile: Dockerfile
      args:
        - APP_CODE_PATH_CONTAINER=${APP_CODE_PATH_CONTAINER}
    image: backend-app
    container_name: app
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
    environment:
      - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
      - COMPOSER_MEMORY_LIMIT=-1
    networks:
      - backend

  worker:
    container_name: backend-worker
    build:
      context: ./php-worker
    depends_on:
      - app
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
      - ./php-worker/supervisord.d:/etc/supervisord.d
    networks:
      - backend

  #Nginx Service
  nginx:
    build:
      context: ./nginx
    container_name: backend-nginx
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
      - "${NGINX_HOST_HTTPS_PORT}:443"
    depends_on:
      - app
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
      - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
    networks:
      - frontend
      - backend

  #MySQL Service
  mysql:
    build:
      context: ./mysql
      args:
        - MYSQL_VERSION=${MYSQL_VERSION}
    container_name: backend-mysql
    ports:
      - "${MYSQL_PORT}:3306"
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=${WORKSPACE_TIMEZONE}
    volumes:
      - ${DATA_PATH_HOST}/mysql:/var/lib/mysql/
    #      - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
    networks:
      - backend

  #REDIS Service
  redis:
    build: ./redis
    container_name: backend-redis
    volumes:
      - ${DATA_PATH_HOST}/redis:/data
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - backend

  redis-cluster:
    image: 'phuongdm1987/docker-redis-cluster:1.0.0'
    container_name: backend-redis-cluster
    volumes:
      - 'redis-cluster:/data'
    ports:
      - '7000-7005:7000-7005'
    networks:
      - backend
    environment:
      DEFAULT_PASSWORD: 'secret'

  ### ElasticSearch ########################################
  elasticsearch:
    build: ./elasticsearch
    container_name: backend-elasticsearch
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
    environment:
      - cluster.name=laravel-docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "${ELASTICSEARCH_HOST_HTTP_PORT}:9200"
      - "${ELASTICSEARCH_HOST_TRANSPORT_PORT}:9300"
    depends_on:
      - app
    networks:
      - frontend
      - backend

  clickhouse:
    image: yandex/clickhouse-server:19.15.3.6
    container_name: backend-clickhouse
    ports:
      - "${CLICKHOUSE_HTTP_PORT}:8124"
      - "${CLICKHOUSE_CLIENT_PORT}:9002"
    volumes:
      - clickhouse:/var/lib/clickhouse
      - ${PWD}/clickhouse/dictionary/external_placement_dictionary.xml:/etc/clickhouse-server/external_placement_dictionary.xml
      - ${PWD}/clickhouse/config.xml:/etc/clickhouse-server/config.xml
    networks:
      - backend

  mailhog:
    image: 'mailhog/mailhog:latest'
    container_name: bskend-mailhog
    ports:
      - "${MAILHOG_SMTP_PORT}:1025"
      - "${MAILHOG_HTTP_PORT}:8025"
    networks:
      - backend

#Docker Networks
networks:
  frontend:
    driver: ${NETWORKS_DRIVER}
  backend:
    driver: ${NETWORKS_DRIVER}
#Volumes
volumes:
  mysql:
    driver: ${VOLUMES_DRIVER}
  redis:
    driver: ${VOLUMES_DRIVER}
  redis-cluster:
    driver: ${VOLUMES_DRIVER}
  clickhouse:
    driver: ${VOLUMES_DRIVER}
  elasticsearch:
    driver: ${VOLUMES_DRIVER}
